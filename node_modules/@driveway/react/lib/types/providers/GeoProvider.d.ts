/// <reference types="google.maps" />
import { State } from "constants/states";
import { Dispatch, ReactNode } from "react";
declare const defaultPriorities: GeoMethod[];
declare type Props = {
    timeZoneApiKey: string;
    geoApiKey: string;
    homeAddress?: Partial<Address>;
    children: ReactNode;
};
declare type GeocoderRequest = google.maps.GeocoderRequest;
declare type GeocoderResult = google.maps.GeocoderResult;
declare type GeocoderStatus = google.maps.GeocoderStatus;
declare type GeoMethod = "user_override" | "user_address" | "ip_address" | "browser";
declare type Coords = {
    lat: number;
    lng: number;
};
declare type Address = {
    line1: string;
    line2?: string;
    city: string;
    state: State;
    postalCode: string;
};
declare type GeoAddress = Partial<Address> & Partial<Coords>;
declare type GeoState = {
    method?: null | GeoMethod;
    locations: GeoAddress[];
    userOverride: null | GeoAddress;
};
declare type GeoContextState = {
    timeZoneApiKey?: string;
    geoApiKey?: string;
    homeAddress?: GeoAddress;
    geoState: GeoState;
    geoDispatch: Dispatch<GeoAction>;
    google?: typeof google;
};
declare type GeoSetLocations = [
    "setLocations",
    {
        method: GeoMethod;
        locations: GeoAddress[];
    }
];
declare type GeoSetUserOverride = [
    "setUserOverride",
    {
        userOverride: null | GeoAddress;
    }
];
declare type GeoClear = ["clear"];
declare type GeoAction = GeoSetLocations | GeoSetUserOverride | GeoClear;
declare const stringifyAddress: (address: Partial<Address>) => string;
declare const initialContext: GeoContextState;
declare const GeoContext: import("react").Context<GeoContextState>;
declare const GeoProvider: ({ timeZoneApiKey, geoApiKey, homeAddress, children, }: Props) => JSX.Element;
export default GeoProvider;
export { GeoContext, initialContext as initialLocationContext, defaultPriorities, stringifyAddress, };
export type { Props as GeoProviderProps, Address, GeoAddress, GeoMethod, State, Coords, GeocoderResult, GeocoderStatus, GeocoderRequest, };
