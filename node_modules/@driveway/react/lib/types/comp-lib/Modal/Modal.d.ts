import { ButtonProps } from "comp-lib/Button";
import { ReactNode } from "react";
export declare const modalMaxWidth: {
    large: string;
    medium: string;
    small: string;
    exSmall: string;
};
export declare type ModalProps = Omit<React.HTMLAttributes<HTMLDivElement>, "title"> & {
    callToActionButtons?: [ButtonProps, ButtonProps?];
    children?: null | JSX.Element | (null | JSX.Element)[];
    classes?: Partial<Record<"modalBody" | "body" | "footer", string>>;
    closeActionText?: string;
    closeActionStyle?: string | {
        [key: string]: any;
    };
    contentBackgroundColor?: string;
    disableIconClose?: boolean;
    hideCloseAction?: boolean;
    hideHeader?: boolean;
    contentRef?: any;
    onClose: (evt?: object, reason?: string) => void;
    open: boolean;
    scroll?: boolean;
    size?: "large" | "medium" | "small" | "exSmall";
    title?: ReactNode;
    titleImage?: {
        src: string;
        alt?: string;
    };
    transition?: any;
    centerButton?: boolean;
};
declare const Modal: ({ callToActionButtons, children, classes, closeActionStyle, closeActionText, contentBackgroundColor, disableIconClose, hideCloseAction, hideHeader, contentRef, onClose, open, scroll, size, title, titleImage, transition, centerButton, ...props }: ModalProps) => JSX.Element;
export default Modal;
