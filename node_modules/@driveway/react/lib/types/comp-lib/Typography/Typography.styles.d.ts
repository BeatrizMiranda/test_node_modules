import { Theme } from "@mui/material";
export declare const typographyStyles: (theme: Theme) => {
    hero: {
        [x: string]: string | number | {
            fontSize: string;
            letterSpacing: string;
        };
        fontWeight: number;
        fontSize: string;
        lineHeight: string;
        letterSpacing: string;
    };
    h1: {
        [x: string]: string | number | {
            fontSize: string;
            letterSpacing: string;
        };
        fontWeight: number;
        fontSize: string;
        lineHeight: string;
        letterSpacing: string;
    };
    h2: {
        [x: string]: string | number | {
            fontSize: string;
            letterSpacing: string;
        };
        fontWeight: number;
        fontSize: string;
        lineHeight: string;
        letterSpacing: string;
    };
    h3: {
        [x: string]: string | number | {
            fontSize: string;
            letterSpacing: string;
        };
        fontWeight: number;
        fontSize: string;
        lineHeight: string;
        letterSpacing: string;
    };
    h4: {
        [x: string]: string | number | {
            fontSize: string;
            letterSpacing: string;
        } | {
            fontSize: string;
            letterSpacing?: undefined;
        };
        fontWeight: number;
        fontSize: string;
        lineHeight: string;
        letterSpacing: string;
    };
    h5: {
        [x: string]: string | number | {
            fontSize: string;
        };
        fontWeight: number;
        fontSize: string;
        lineHeight: string;
        letterSpacing: string;
    };
    h6: {
        [x: string]: string | number | {
            fontSize: string;
        };
        fontWeight: number;
        letterSpacing: string;
        fontSize: string;
        lineHeight: string;
    };
    subtitle: {
        [x: string]: string | number | {
            fontSize: string;
        };
        fontWeight: number;
        letterSpacing: string;
        fontSize: string;
        lineHeight: string;
    };
    bodyLead: {
        [x: string]: string | number | {
            letterSpacing: string;
            fontSize: string;
        };
        fontWeight: number;
        letterSpacing: string;
        fontSize: string;
        lineHeight: string;
    };
    bodyLeadBold: {
        [x: string]: string | number | {
            fontSize: string;
            letterSpacing: string;
        };
        fontWeight: number;
        letterSpacing: string;
        fontSize: string;
        lineHeight: string;
    };
    body: {
        [x: string]: string | number | {
            fontSize: string;
            letterSpacing: string;
        };
        fontWeight: number;
        fontSize: string;
        lineHeight: string;
        letterSpacing: string;
    };
    bodyBold: {
        [x: string]: string | number | {
            fontSize: string;
            letterSpacing: string;
        };
        fontWeight: number;
        fontSize: string;
        lineHeight: string;
        letterSpacing: string;
    };
    bodySmall: {
        [x: string]: string | number | {
            fontSize: string;
            letterSpacing: string;
        };
        fontWeight: number;
        fontSize: string;
        lineHeight: string;
        letterSpacing: string;
    };
    bodySmallBold: {
        [x: string]: string | number | {
            fontSize: string;
            letterSpacing: string;
        };
        fontWeight: number;
        fontSize: string;
        lineHeight: string;
        letterSpacing: string;
    };
    microcopy: {
        [x: string]: string | number | {
            fontSize: string;
            letterSpacing: string;
        };
        fontWeight: number;
        fontSize: string;
        lineHeight: string;
        letterSpacing: string;
    };
    microcopyBold: {
        [x: string]: string | number | {
            fontSize: string;
            letterSpacing: string;
        };
        fontWeight: number;
        fontSize: string;
        lineHeight: string;
        letterSpacing: string;
    };
    disclaimer: {
        [x: string]: string | number | {
            fontSize: string;
            lineHeight: string;
            letterSpacing: string;
        };
        fontWeight: number;
        fontSize: string;
        lineHeight: string;
        letterSpacing: string;
        color: string;
    };
    overlineSmall: {
        fontWeight: number;
        fontSize: string;
        lineHeight: string;
        letterSpacing: string;
        textTransform: "uppercase";
    };
    overlineLarge: {
        fontWeight: number;
        fontSize: string;
        lineHeight: string;
        letterSpacing: string;
        textTransform: "uppercase";
    };
};
declare const useStyles: (params: void, styleOverrides?: {
    props: {
        classes?: Record<string, string> | undefined;
    } & Record<string, unknown>;
    ownerState?: Record<string, unknown> | undefined;
} | undefined) => {
    classes: Record<"body" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "hero" | "subtitle" | "bodyLead" | "bodyLeadBold" | "bodyBold" | "bodySmall" | "bodySmallBold" | "microcopy" | "microcopyBold" | "disclaimer" | "overlineSmall" | "overlineLarge", string>;
    theme: Theme;
    css: import("tss-react/types").Css;
    cx: import("tss-react/types").Cx;
};
export default useStyles;
