import { TypographyProps as MUITypographyProps } from "@mui/material/Typography";
import { ElementType } from "react";
export declare const ITypographyVariants: readonly ["hero", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle", "bodyLead", "bodyLeadBold", "body", "bodyBold", "bodySmall", "bodySmallBold", "microcopy", "microcopyBold", "disclaimer", "overlineSmall", "overlineLarge"];
declare type ITypographyVariant = typeof ITypographyVariants[number];
export interface ITypographyProps {
    variant: ITypographyVariant;
}
declare type C = ElementType;
export declare type TypographyProps = Omit<MUITypographyProps<C, {
    component?: C;
}>, "variant"> & ITypographyProps;
declare const Typography: (props: Omit<MUITypographyProps<C, {
    component?: C | undefined;
}>, "variant"> & ITypographyProps & import("react").RefAttributes<unknown>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>> | null;
export default Typography;
