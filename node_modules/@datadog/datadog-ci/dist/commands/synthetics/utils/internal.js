"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getResultIdOrLinkedResultId = exports.isResultInBatchSkippedBySelectiveRerun = exports.hasResult = exports.getOverriddenExecutionRule = void 0;
const public_1 = require("./public");
const getOverriddenExecutionRule = (test, configOverride) => {
    var _a, _b;
    if (configOverride === null || configOverride === void 0 ? void 0 : configOverride.executionRule) {
        return (0, public_1.getStrictestExecutionRule)(configOverride.executionRule, (_b = (_a = test === null || test === void 0 ? void 0 : test.options) === null || _a === void 0 ? void 0 : _a.ci) === null || _b === void 0 ? void 0 : _b.executionRule);
    }
};
exports.getOverriddenExecutionRule = getOverriddenExecutionRule;
const hasResult = (result) => {
    return !(0, public_1.isResultSkippedBySelectiveRerun)(result);
};
exports.hasResult = hasResult;
const isResultInBatchSkippedBySelectiveRerun = (result) => {
    var _a;
    return ((_a = result.selective_rerun) === null || _a === void 0 ? void 0 : _a.decision) === 'skip';
};
exports.isResultInBatchSkippedBySelectiveRerun = isResultInBatchSkippedBySelectiveRerun;
const getResultIdOrLinkedResultId = (result) => {
    if ((0, exports.isResultInBatchSkippedBySelectiveRerun)(result)) {
        return result.selective_rerun.linked_result_id;
    }
    return result.result_id;
};
exports.getResultIdOrLinkedResultId = getResultIdOrLinkedResultId;
//# sourceMappingURL=internal.js.map