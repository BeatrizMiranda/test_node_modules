import { APIHelper } from './api';
import { MobileApplicationUploadPart, MobileApplicationVersion, Test, TestPayload, UploadApplicationCommandConfig, UserConfigOverride } from './interfaces';
export declare const getSizeAndPartsFromFile: (filePath: string) => Promise<{
    appSize: number;
    parts: MobileApplicationUploadPart[];
}>;
export declare const uploadMobileApplications: (api: APIHelper, applicationPathToUpload: string, mobileApplicationId: string) => Promise<string>;
export declare const uploadApplication: (api: APIHelper, applicationPathToUpload: string, testApplicationId: string, uploadedApplicationByPath: {
    [applicationFilePath: string]: {
        applicationId: string;
        fileName: string;
    }[];
}) => Promise<void>;
export declare const overrideMobileConfig: (userConfigOverride: UserConfigOverride, overriddenTest: TestPayload, test: Test, localApplicationOverride?: {
    applicationId: string;
    fileName: string;
}) => void;
export declare const shouldUploadApplication: (applicationPathToUpload: string, testApplicationId: string, uploadedApplicationByPath: {
    [applicationFilePath: string]: {
        applicationId: string;
        fileName: string;
    }[];
}) => boolean;
export declare const uploadApplicationAndOverrideConfig: (api: APIHelper, test: Test, userConfigOverride: UserConfigOverride, overriddenTestsToTrigger: TestPayload, uploadedApplicationByPath: {
    [applicationFilePath: string]: {
        applicationId: string;
        fileName: string;
    }[];
}) => Promise<void>;
export declare const createNewMobileVersion: (api: APIHelper, version: MobileApplicationVersion) => Promise<MobileApplicationVersion>;
export declare const uploadMobileApplicationVersion: (config: UploadApplicationCommandConfig) => Promise<MobileApplicationVersion>;
