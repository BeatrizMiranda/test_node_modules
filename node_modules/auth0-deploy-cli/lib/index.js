#!/usr/bin/env node
"use strict";

var _globalAgent = require("global-agent");

var _args = require("./args");

var _commands = require("./commands");

var _commands2 = _interopRequireDefault(_commands);

var _logger = require("./logger");

var _logger2 = _interopRequireDefault(_logger);

var _tools = require("./tools");

var _tools2 = _interopRequireDefault(_tools);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

async function run(params) {
  const cmd = _commands2.default[params._[0]];
  const proxy = params.proxy_url;

  if (proxy) {
    const MAJOR_NODEJS_VERSION = parseInt(process.version.slice(1).split('.')[0], 10);

    if (MAJOR_NODEJS_VERSION < 10) {
      throw new Error('The --proxy_url option is only supported on Node >= 10');
    }

    process.env.GLOBAL_AGENT_HTTP_PROXY = proxy;
    (0, _globalAgent.bootstrap)();
  }

  _logger2.default.debug(`Start command ${params._[0]}`);

  await cmd(params);

  _logger2.default.debug(`Finished command ${params._[0]}`);
}

if (require.main === module) {
  const params = (0, _args.getParams)();

  _logger2.default.debug('Starting Auth0 Deploy CLI Tool');

  _logger2.default.transports.console.level = params.level;

  if (params.debug) {
    _logger2.default.transports.console.level = 'debug';
    process.env.AUTH0_DEBUG = 'true';
    process.env.AUTH0_LOG = 'debug';
  }

  run(params).then(() => process.exit(0)).catch(error => {
    if (error.type || error.stage) {
      _logger2.default.error(`Problem running command ${params._[0]} during stage ${error.stage} when processing type ${error.type}`);
    } else {
      _logger2.default.error(`Problem running command ${params._[0]}`);
    }

    const msg = error.message || error.toString();

    _logger2.default.error(msg);

    if (process.env.AUTH0_DEBUG === 'true') {
      _logger2.default.debug(error.stack);
    }

    if (typeof msg === 'string' && msg.includes('Payload validation error')) {
      _logger2.default.info('Please see https://github.com/auth0/auth0-deploy-cli#troubleshooting for common issues');
    }

    process.exit(1);
  });
}

module.exports = {
  deploy: _commands2.default.import,
  dump: _commands2.default.export,
  import: _commands2.default.import,
  export: _commands2.default.export,
  tools: _tools2.default
};