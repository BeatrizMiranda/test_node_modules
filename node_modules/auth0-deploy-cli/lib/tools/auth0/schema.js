"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _handlers = require("./handlers");

var handlers = _interopRequireWildcard(_handlers);

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const typesSchema = Object.entries(handlers).reduce((map, [name, obj]) => {
  map[name] = obj.schema;
  return map;
}, {});
const excludeSchema = Object.entries(handlers).reduce((map, [name, obj]) => {
  if (obj.excludeSchema) {
    map[name] = obj.excludeSchema;
  }

  return map;
}, {});
exports.default = {
  type: 'object',
  $schema: 'http://json-schema.org/draft-07/schema#',
  properties: { ...typesSchema,
    exclude: {
      type: 'object',
      properties: { ...excludeSchema
      },
      default: {}
    }
  },
  additionalProperties: false
};