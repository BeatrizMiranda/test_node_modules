"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.schema = undefined;

var _default = require("./default");

var _default2 = _interopRequireDefault(_default);

var _constants = require("../../constants");

var _constants2 = _interopRequireDefault(_constants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const mappings = Object.entries(_constants2.default.GUARDIAN_FACTOR_PROVIDERS).reduce((accum, [name, providers]) => {
  providers.forEach(p => {
    accum.push({
      name,
      provider: p
    });
  });
  return accum;
}, []);
const schema = exports.schema = {
  type: 'array',
  items: {
    type: 'object',
    properties: {
      name: {
        type: 'string',
        enum: _constants2.default.GUARDIAN_FACTORS
      },
      provider: {
        type: 'string',
        enum: mappings.map(p => p.provider)
      }
    },
    required: ['name', 'provider']
  }
};

class GuardianFactorProvidersHandler extends _default2.default {
  constructor(options) {
    super({ ...options,
      type: 'guardianFactorProviders',
      id: 'name'
    });
  }

  async getType() {
    if (this.existing) return this.existing;
    const data = await Promise.all(mappings.map(async m => {
      const provider = await this.client.guardian.getFactorProvider(m);
      return { ...m,
        ...provider
      };
    }));
    return data.filter(d => Object.keys(d).length > 2);
  }

  async processChanges(assets) {
    const {
      guardianFactorProviders
    } = assets;
    if (!guardianFactorProviders || !guardianFactorProviders.length) return;
    await Promise.all(guardianFactorProviders.map(async factorProvider => {
      const data = { ...factorProvider
      };
      const params = {
        name: factorProvider.name,
        provider: factorProvider.provider
      };
      delete data.name;
      delete data.provider;
      await this.client.guardian.updateFactorProvider(params, data);
      this.didUpdate(params);
      this.updated += 1;
    }));
  }

}

exports.default = GuardianFactorProvidersHandler;