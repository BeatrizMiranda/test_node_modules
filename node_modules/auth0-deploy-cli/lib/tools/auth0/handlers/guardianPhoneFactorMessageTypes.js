"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.schema = undefined;

var _default = require("./default");

var _default2 = _interopRequireDefault(_default);

var _constants = require("../../constants");

var _constants2 = _interopRequireDefault(_constants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const schema = exports.schema = {
  type: 'object',
  properties: {
    message_types: {
      type: 'array',
      items: {
        type: 'string',
        enum: _constants2.default.GUARDIAN_PHONE_MESSAGE_TYPES
      }
    }
  },
  additionalProperties: false
};

const isFeatureUnavailableError = err => {
  if (err.statusCode === 404) {
    return true;
  }

  if (err.statusCode === 403 && err.originalError && err.originalError.response && err.originalError.response.body && err.originalError.response.body.errorCode === 'voice_mfa_not_allowed') {
    return true;
  }

  return false;
};

class GuardianPhoneMessageTypesHandler extends _default2.default {
  constructor(options) {
    super({ ...options,
      type: 'guardianPhoneFactorMessageTypes'
    });
  }

  async getType() {
    if (!this.client.guardian || typeof this.client.guardian.getPhoneFactorMessageTypes !== 'function') {
      return {};
    }

    if (this.existing) return this.existing;

    try {
      this.existing = await this.client.guardian.getPhoneFactorMessageTypes();
    } catch (e) {
      if (isFeatureUnavailableError(e)) {
        return {};
      }

      throw e;
    }

    return this.existing;
  }

  async processChanges(assets) {
    const {
      guardianPhoneFactorMessageTypes
    } = assets;
    if (!guardianPhoneFactorMessageTypes || !guardianPhoneFactorMessageTypes.message_types) return;
    const params = {};
    const data = guardianPhoneFactorMessageTypes;
    await this.client.guardian.updatePhoneFactorMessageTypes(params, data);
    this.updated += 1;
    this.didUpdate(guardianPhoneFactorMessageTypes);
  }

}

exports.default = GuardianPhoneMessageTypesHandler;