"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _fsExtra = require("fs-extra");

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

var _tools = require("../../../tools");

var _utils = require("../../../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parse(context) {
  const factorsFolder = _path2.default.join(context.filePath, _tools.constants.GUARDIAN_DIRECTORY, _tools.constants.GUARDIAN_FACTORS_DIRECTORY);

  if (!(0, _utils.existsMustBeDir)(factorsFolder)) return {
    guardianFactors: undefined
  };
  const foundFiles = (0, _utils.getFiles)(factorsFolder, ['.json']);
  const guardianFactors = foundFiles.map(f => (0, _utils.loadJSON)(f, context.mappings)).filter(p => Object.keys(p).length > 0);
  return {
    guardianFactors
  };
}

async function dump(context) {
  const {
    guardianFactors
  } = context.assets;
  if (!guardianFactors) return;

  const factorsFolder = _path2.default.join(context.filePath, _tools.constants.GUARDIAN_DIRECTORY, _tools.constants.GUARDIAN_FACTORS_DIRECTORY);

  _fsExtra2.default.ensureDirSync(factorsFolder);

  guardianFactors.forEach(factor => {
    const factorFile = _path2.default.join(factorsFolder, `${factor.name}.json`);

    (0, _utils.dumpJSON)(factorFile, factor);
  });
}

exports.default = {
  parse,
  dump
};