"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _fsExtra = require("fs-extra");

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

var _tools = require("../../../tools");

var _logger = require("../../../logger");

var _logger2 = _interopRequireDefault(_logger);

var _utils = require("../../../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parse(context) {
  const rulesFolder = _path2.default.join(context.filePath, _tools.constants.RULES_DIRECTORY);

  if (!(0, _utils.existsMustBeDir)(rulesFolder)) return {
    rules: undefined
  };
  const files = (0, _utils.getFiles)(rulesFolder, ['.json']);
  const rules = files.map(f => {
    const rule = { ...(0, _utils.loadJSON)(f, context.mappings)
    };

    if (rule.script) {
      rule.script = context.loadFile(rule.script, _tools.constants.RULES_DIRECTORY);
    }

    return rule;
  });
  return {
    rules
  };
}

async function dump(context) {
  const rules = [...(context.assets.rules || [])];
  if (!rules) return;

  const rulesFolder = _path2.default.join(context.filePath, _tools.constants.RULES_DIRECTORY);

  _fsExtra2.default.ensureDirSync(rulesFolder);

  rules.forEach(rule => {
    const name = (0, _utils.sanitize)(rule.name);

    const ruleJS = _path2.default.join(rulesFolder, `${name}.js`);

    _logger2.default.info(`Writing ${ruleJS}`);

    _fsExtra2.default.writeFileSync(ruleJS, rule.script);

    const ruleFile = _path2.default.join(rulesFolder, `${name}.json`);

    (0, _utils.dumpJSON)(ruleFile, { ...rule,
      script: `./${name}.js`
    });
  });
}

exports.default = {
  parse,
  dump
};