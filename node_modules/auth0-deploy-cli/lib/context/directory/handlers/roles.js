"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _fsExtra = require("fs-extra");

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

var _tools = require("../../../tools");

var _logger = require("../../../logger");

var _logger2 = _interopRequireDefault(_logger);

var _utils = require("../../../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parse(context) {
  const rolesFolder = _path2.default.join(context.filePath, _tools.constants.ROLES_DIRECTORY);

  if (!(0, _utils.existsMustBeDir)(rolesFolder)) return {
    roles: undefined
  };
  const files = (0, _utils.getFiles)(rolesFolder, ['.json']);
  const roles = files.map(f => {
    const role = { ...(0, _utils.loadJSON)(f, context.mappings)
    };
    return role;
  });
  return {
    roles
  };
}

async function dump(context) {
  const {
    roles
  } = context.assets;
  if (!roles || roles.constructor === Object) return;

  const rolesFolder = _path2.default.join(context.filePath, _tools.constants.ROLES_DIRECTORY);

  _fsExtra2.default.ensureDirSync(rolesFolder);

  roles.forEach(role => {
    const roleFile = _path2.default.join(rolesFolder, (0, _utils.sanitize)(`${role.name}.json`));

    _logger2.default.info(`Writing ${roleFile}`);

    if (role.description === null) {
      delete role.description;
    }

    (0, _utils.dumpJSON)(roleFile, role);
  });
}

exports.default = {
  parse,
  dump
};