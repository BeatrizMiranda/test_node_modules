"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _fsExtra = require("fs-extra");

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

var _logger = require("../../../logger");

var _logger2 = _interopRequireDefault(_logger);

var _utils = require("../../../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parse(context) {
  const organizationsFolder = _path2.default.join(context.filePath, 'organizations');

  if (!(0, _utils.existsMustBeDir)(organizationsFolder)) return {
    organizations: undefined
  };
  const files = (0, _utils.getFiles)(organizationsFolder, ['.json']);
  const organizations = files.map(f => {
    const org = { ...(0, _utils.loadJSON)(f, context.mappings)
    };
    return org;
  });
  return {
    organizations
  };
}

async function dump(context) {
  const {
    organizations
  } = context.assets;
  if (!organizations || organizations.constructor === Object) return;

  const organizationsFolder = _path2.default.join(context.filePath, 'organizations');

  _fsExtra2.default.ensureDirSync(organizationsFolder);

  organizations.forEach(organization => {
    const organizationFile = _path2.default.join(organizationsFolder, (0, _utils.sanitize)(`${organization.name}.json`));

    _logger2.default.info(`Writing ${organizationFile}`);

    if (organization.connections.length > 0) {
      organization.connections = organization.connections.map(c => {
        const name = c.connection && c.connection.name;
        const conn = {
          name,
          ...c
        };
        delete conn.connection_id;
        delete conn.connection;
        return conn;
      });
    }

    (0, _utils.dumpJSON)(organizationFile, organization);
  });
}

exports.default = {
  parse,
  dump
};