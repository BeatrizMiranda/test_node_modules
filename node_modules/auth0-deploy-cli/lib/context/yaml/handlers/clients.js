"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

var _fsExtra = require("fs-extra");

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _tools = require("../../../tools");

var _logger = require("../../../logger");

var _logger2 = _interopRequireDefault(_logger);

var _utils = require("../../../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

async function parse(context) {
  const {
    clients
  } = context.assets;

  const clientsFolder = _path2.default.join(context.basePath, _tools.constants.CLIENTS_DIRECTORY);

  if (!clients || !clients.length) {
    return {
      clients: context.assets.clients
    };
  }

  return {
    clients: [...clients.map(client => {
      if (client.custom_login_page) {
        const htmlFileName = _path2.default.join(clientsFolder, client.custom_login_page);

        if ((0, _utils.isFile)(htmlFileName)) {
          client.custom_login_page = context.loadFile(htmlFileName);
        }
      }

      return client;
    })]
  };
}

async function dump(context) {
  const clientsFolder = _path2.default.join(context.basePath, _tools.constants.CLIENTS_DIRECTORY);

  return {
    clients: [...context.assets.clients.map(client => {
      if (client.custom_login_page) {
        const clientName = (0, _utils.sanitize)(client.name);
        const html = client.custom_login_page;

        const customLoginHtml = _path2.default.join(clientsFolder, `${clientName}_custom_login_page.html`);

        _logger2.default.info(`Writing ${customLoginHtml}`);

        _fsExtra2.default.ensureDirSync(clientsFolder);

        _fsExtra2.default.writeFileSync(customLoginHtml, html);

        client.custom_login_page = `./${clientName}_custom_login_page.html`;
      }

      return (0, _utils.clearClientArrays)(client);
    })]
  };
}

exports.default = {
  parse,
  dump
};